# Ok, testy testuji co? Jsou to testy pro semantiku + parser + knihovnu...
# Jsou to teda nejake testy pro balik? A baliky se kombinuji z jinych baliku?

# Ok, ale semantika a knihovna je uz jiny softwarovy package. Ne?
# Jak se softwarove balicky kombinuji?
# Flatpak?

# Flatpak.
# - Root
#   - rv-kcc
#   - profiles/A,B,C
#   - c-parser
#   - cpp-parser
#
# - A profile:
#   - semantics
#   - library
#
#
#
# /usr/lib/rv-match/
#
#
# TODO co s testy?
#
#
# Hadam, ze tedy bude jeden configure.am pro kazdou komponentu:
# - c-parser
# - cpp-parser
# - rv-kcc
#
# Ale co profily? Muzeme mit jeden configure.am pro sestaveni profilu?
# Parametry: cesta k c-parser, cpp-parser, rv-kcc.
# Asi je rozdil mezi instalacni cestou a soucasnou cestou.
# Dalsi parametry: nazev profilu, cesta ke zdrojakum profilu.
# Takze potrebuji adresar popisujici profil.
#
#
# Co je profil? Sklada se ze:
# - K zdrojaku
# - Zdojaku knihovny, pripadne patchu pro knihovnu.
#
#
# Mozna ze jeden package je standardni knihovna: zavisi na sestavene semantice,
# zdrojacich, ...File
#


Jake tedy mame zdrojove veci?
rv-kcc
semantics
profile/A,B,C
c-parser
cpp-parser


# File system hierarchy standard
#
#
# So the difference is in the profiles...
# I would need one branch in c-semantics for this,
# and one branch in rv-match repository.
# We will make sure they work together
# and then switch them for master branches.
# Talk with Dwight about this.


1. Things we need to build everything. Probably wget, git, make, maven, autoconf. etc.
Every component needs to specify its dependencies (DEPS.md). No! Tools that are needed to build it. Build time dependencies, in BUILD.md. Then the toplevel build script

2. Things we need to run kcc
