Clang_Version := 3.9.1
NCurses_Version := 6.1-20190121

srcdir = @srcdir@
VPATH = @srcdir@


Clang_Architecture := x86_64-linux-gnu-ubuntu-16.04
Clang_Dir := clang+llvm-$(Clang_Version)-$(Clang_Architecture)
Clang_Archive := $(Clang_Dir).tar.xz
Clang_URL := http://releases.llvm.org/$(Clang_Version)/$(Clang_Archive)
Clang_Prefix := @prefix@/lib/clang-$(Clang_Version)

NCurses_Dir := ncurses-$(NCurses_Version)
NCurses_Archive := $(NCurses_Dir).tgz
NCurses_URL := https://invisible-mirror.net/archives/ncurses/current/$(NCurses_Archive)
NCurses_Prefix := @prefix@/lib/ncurses-$(NCurses_Version)
NCurses_libncurses := $(NCurses_Dir)/lib/libncurses.a
NCurses_include := $(NCurses_Dir)/include

.PHONY: default
default: clang-tools/clang-kast

.PHONY: deps
deps: $(Clang_Dir) $(NCurses_libncurses)

# Do not use '$<' except in implicit rules. But use: '$(srcdir)/file.txt'

# TODO: (1) download particular version of ncurses
# (2) once unpacked, there is no need to unpack it again.
# (3) build ncurses

$(Clang_Archive):
	@echo Downloading $@
	@wget -O $@ $(Clang_URL)
	@touch $@

$(Clang_Dir): $(Clang_Archive)
	@echo Unpacking $@
	@tar --touch -xJf $(Clang_Archive)

$(NCurses_Archive):
	@echo Downloading $@
	@wget -O $@ $(NCurses_URL)
	@touch $@

$(NCurses_Dir): $(NCurses_Archive)
	@echo Unpacking $@
	@tar --touch -xzf $(NCurses_Archive)

$(NCurses_libncurses): $(NCurses_Dir)
	@echo Building $@
	@cd $(NCurses_Dir) && ./configure --prefix=$(NCurses_Prefix) && make

clang-tools/CMakeCache.txt: $(srcdir)/src/CMakeLists.txt deps
	@echo Generating $@
	@cmake -DCURSES_LIBRARY=$(shell pwd)/$(NCurses_libncurses) -DCURSES_INCLUDE_PATH=$(NCurses_include) -DLLVM_PATH=$(Clang_Dir) -DCMAKE_CXX_FLAGS=-fno-rtti -B$(dir $@) -H$(srcdir)/src

clang-tools/clang-kast clang-tools/clang-sites: clang-tools/%: clang-tools/CMakeCache.txt
	@echo Building $@
	@cmake --build $(dir $@) --target $*


install:
	cd $(NCurses_Dir) && make install

