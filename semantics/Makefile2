include $(dir $(lastword $(MAKEFILE_LIST)))/../.build/inc.mk
include definitions.mk

.PHONY: default
default: help

.PHONY: help
help:
	@echo 'List of variables:'
	@echo '  PROFILE_DIR (optional)'
	@echo '  KOMPILE_FLAGS (mandatory)'
	@echo
	@echo 'Format of targets:'
	@echo '  ./build/x86-gcc-limited-libc/$(call timestampOf,$$(lang)/$$(variant))'
	@echo '  where $$(lang) in $(LANGUAGE_DEFS)' 
	@echo '  and $$(variant): any'
	@echo
	@echo 'Example target:'
	@echo '  ./build/x86-gcc-limited-libc/$(call timestampOf,c-cpp-execution/nd)'
	@echo


# Parameter: PROFILE_DIR

OPAQUE_KLABELS = --opaque-klabels c-translation.k


KOMPILE_DEFAULT_FLAGS = --backend ocaml \
                        --non-strict \
                        --smt none \
                        $(OPAQUE_KLABELS)

# Naming scheme:
# .build/$(PROFILE_NAME)/$(DEFINITION)/$(VARIANT)/$(DEFINITION)-kompiled/timestamp
# We also provide a symlinked directory:
# ./build/$(PROFILE)/$(DEFINITION)/$(VARIANT)/kompiled/

.build/%/timestamp:
	$(eval S := $(@:.build/%=%))
	$(eval L := $(call targetComponents,$S))
	$(eval CURRENT_PROFILE_NAME := $(call profileNameFromTimestamp,$L))
	$(eval CURRENT_DEFINITION := $(call languageDefinitionFromTimestamp,$L))
	$(eval CURRENT_VARIANT := $(call variantNameFromTimestamp,$L))
	$(eval CURRENT_TARGET_DIR := .build/$(CURRENT_PROFILE_NAME)/$(CURRENT_DEFINITION)/$(CURRENT_VARIANT))
	$(eval PROFILE_DIR := $(if $(PROFILE_DIR),$(PROFILE_DIR),$(C_SEMANTICS_DIR)/profiles/$(CURRENT_PROFILE_NAME)))

	@echo '--------------------------'
	@echo 'Building $@'
	@echo 'S: $S'
	@echo 'L: $L'
	@echo 'CURRENT_PROFILE_NAME: $(CURRENT_PROFILE_NAME)'
	@echo 'PROFILE_DIR: $(PROFILE_DIR)'
	@echo 'CURRENT_DEFINITION: $(CURRENT_DEFINITION)'
	@echo 'CURRENT_VARIANT: $(CURRENT_VARIANT)'
	@echo 'CURRENT_TARGET_DIR: $(CURRENT_TARGET_DIR)'
	@echo 'Kompiling $(CURRENT_DEFINITION)/$(CURRENT_VARIANT)'

	$(KOMPILE) \
		$(KOMPILE_FLAGS) \
        	$(KOMPILE_DEFAULT_FLAGS) \
		-I $(PROFILE_DIR)/semantics \
		--no-prelude -w all -v --debug \
		$(CURRENT_DEFINITION).k \	
		-d $(CURRENT_TARGET_DIR)

	ln -s '$(CURRENT_DEFINITION)-kompiled' '$(CURRENT_TARGET_DIR)/kompiled'



